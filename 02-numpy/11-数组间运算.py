import numpy as np

if __name__ == '__main__':
    # 1 数组与数的运算 + - * / 对所有数据进行操作
    a = np.array([[1, 2, 3], [1, 2, 3]])
    print(a)
    print(a + 2)
    print(a / 2)
    print(a * 2)
    # 2 数组与数组的运算
    # 2.1 广播机制
    # 数组进行矢量运算时， 要求数组的shape形状是相等的。
    # 如果数组不相等就会出现广播机制，通过广播机制扩展两个数组
    # 使得两数组的shape属性一样，然后再进行运算
    # 条件：满足其一即可
    # ①两个数组的后缘维度（即从末尾开始算起的维度）的轴长度相符
    # ②其中的一方的长度为1
    # 广播会在缺失和（或）长度为1的维度上进行。
    # 广播机制需要扩展维度小的数组，使得它与维度最大的数组的shape值相同，
    # 以便使用元素级函数或者运算符进行运算。
    print("-----------------------------------")
    arr1 = np.array([[0], [1], [2]])
    print(arr1)
    """
    [[0]
     [1]
     [2]]"""
    arr2 = np.array([3, 4, 5])
    print(arr2)
    """
    [3 4 5]
    """
    print(arr1 + arr2)  # arr1 和 arr 2 进行扩展再运算
    """arr1            arr2
    [[0, 0, 0]     [[3, 4, 5],
     [1, 1, 1] +    [3, 4, 5],
     [2, 2, 2]]     [3, 4, 5]]      
    """
    arr1 = np.array([[1, 2, 3, 2, 1, 4], [5, 6, 1, 2, 3, 1]])
    arr2 = np.array([[1], [3]])
    print(arr1 + arr2)
    print("--------------------------------------")
    arr1 = np.array([[1], [2], [3]])
    arr2 = np.array([[[1, 2], [2, 2], [3, 3]]])
    print(arr2.shape)
    print(arr1 + arr2)
